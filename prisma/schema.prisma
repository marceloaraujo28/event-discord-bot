generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id                    Int           @id @default(autoincrement())
  eventName             String
  creatorId             String
  status                String        @default("pending")
  createdAt             DateTime      @default(now())
  startTime             BigInt?
  endTime               BigInt?
  channelID             String?
  messageID             String?
  seller                String?
  guildId               String
  totalValue            BigInt?
  guildFeeValue         BigInt?
  sellerFeeValue        BigInt?
  confirmationMessageID String?
  guild                 Guilds        @relation(fields: [guildId], references: [guildID], onDelete: Cascade)
  Participant           Participant[]
}

model GlobalEventCounter {
  id         Int @id @default(1)
  lastNumber Int @default(0)
}

model User {
  id             Int           @id @default(autoincrement())
  userId         String
  currentBalance Float         @default(0)
  totalEarned    Float         @default(0)
  guildID        String
  participants   Participant[]
  guild          Guilds        @relation(fields: [guildID], references: [guildID], onDelete: Cascade)

  @@unique([userId, guildID])
}

model Participant {
  id         Int     @id @default(autoincrement())
  userId     String
  eventId    Int
  joinTime   BigInt?
  totalTime  BigInt?
  guildID    String
  percentage Float   @default(0)
  valueEvent Float   @default(0)
  event      Event   @relation(fields: [eventId], references: [id], onDelete: Cascade)
  guild      Guilds  @relation(fields: [guildID], references: [guildID], onDelete: Cascade)
  user       User    @relation(fields: [userId, guildID], references: [userId, guildID])

  @@unique([userId, eventId])
}

model Guilds {
  guildID                String        @id
  newEventChannelID      String?
  language               String?       @default("pt-BR")
  participationChannelID String?
  logsChannelID          String?
  waitingVoiceChannelID  String?
  startedCategoryID      String?
  endedCategoryID        String?
  totalBalance           Float         @default(0)
  guildFee               Float         @default(0)
  sellerFee              Float         @default(0)
  financialChannelID     String?
  eventManagerRoleID     String?
  categoryID             String?
  checkBalanceID         String?
  Event                  Event[]
  Participant            Participant[]
  User                   User[]
}
